apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.hugo'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.cultureoftech.easyexpensetracker"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode versionCodeNumber
        versionName "1.0.1"
    }

    signingConfigs {
        beta {
            Properties keyProperties = new Properties()
            keyProperties.load(new FileInputStream(file('key.properties')))
            storeFile file(project.property("Project.betaSigning"))
            storePassword keyProperties.getProperty('betaPass')
            keyAlias keyProperties['betaUser']
            keyPassword keyProperties['betaPass']
        }
    }

    buildTypes {
        beta {
//            applicationIdSuffix ".beta"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.beta
            ext.betaDistributionEmails="bgogetap@gmail.com, courdavis@gmail.com"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
//        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    // For Dagger
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile 'javax.annotation:javax.annotation-api:1.2'

    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'io.reactivex:rxjava:1.0.16'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.jakewharton:butterknife:8.0.1'
    kapt 'com.jakewharton:butterknife-compiler:8.0.1'
    compile 'com.github.clans:fab:1.6.3'
    compile 'org.greenrobot:greendao:2.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.bluelinelabs:conductor:1.1.3'
// If you want the components that go along with
// Android's support libraries (currently just a PagerAdapter):
    compile 'com.bluelinelabs:conductor-support:1.1.3'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    // Test Dependencies
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.powerMockito"
    testCompile 'org.robolectric:robolectric:3.0'

    // Espresso UI Testing dependencies.
    // Force use of updated support modules to resolve conflicts
    androidTestCompile 'com.android.support:support-v4:23.3.0'
    androidTestCompile 'com.android.support:support-annotations:23.3.0'
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion")
            {
                exclude group: 'com.android.support', module: 'appcompat'
                exclude group: 'com.android.support', module: 'support-v4'
                exclude module: 'recyclerview-v7'
            }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.runnerVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
//    androidTestKapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

def getVersionCodeNumber() {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    def localVersionCode = localProperties.getProperty('local.version.code')

    if (localVersionCode != null && build.name.equals("debug")) {
        return Integer.valueOf(localVersionCode)
    } else {
        return (int) (new Date().getTime() / 1000) - 1000000000
    }
}
